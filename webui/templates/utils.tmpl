{{define "HtmlHead"}}
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
	<link rel="stylesheet" href="/assets/css/modern.css">
	<link rel="stylesheet" href="/assets/css/style.css">
	<script src="/assets/js/func.js"></script>
	<title>Plattentests.de 💿 - Highlights of the week</title>
</head>
{{end}}

{{define "Navigation"}}
	<header>
		<div class="container">
			<nav>
				<a href="/" aria-label="List view"><span class="emoji">📃</span> List</a>
				<a href="/createPlaylist" aria-label="Test view"><span class="emoji">🔈</span> Test</a>
				<a href="/createPlaylist?playlist=prod" aria-label="Production view"><span class="emoji">🔊</span> Prod</a>
			</nav>
			<div class="header-title" id="header-title">
				<span>Plattentests.de 💿</span>
			</div>
		</div>
	</header>
{{end}}

{{define "RecordTable"}}
	<!-- Modern Cards Grid -->
	<div class="records-grid">
		{{range .Records}}
			<div class="record-card" data-imageurl="{{.Image}}">
				<div class="record-image">
					<a href="{{.Link}}">
						<img src="{{.Image}}" alt="Cover art for {{.Band}} – {{.Recordname}}" loading="lazy">
					</a>
					<div class="record-score"><span class="emoji">💿</span> {{.Score}}/10</div>
				</div>
				<div class="record-content">
					<div class="record-band">{{.Band}}</div>
					<div class="record-title">{{.Recordname}}</div>
					<ul class="record-tracks">
						{{range .Tracks}}
							<li>
							{{ if .Tracklink }}
								<span class="emoji">🎵</span> <a href="{{ .Tracklink}}">{{.Trackname}}</a> 
							{{ else }}
								<span class="emoji">🔍</span> {{.Trackname}} 
							{{end}}
							</li>
						{{end}}
					</ul>
				</div>
			</div>
		{{end}}
	</div>

	<!-- Fallback Table (hidden by default) -->
	<table class="recordTable">
		<thead>
			<tr>
				<th>Image</th>
				<th>Band & Record</th>
				<th>Highlights</th>
			</tr>
		</thead>
		<tbody>
			{{range .Records}}
				<tr data-imageurl="{{.Image}}">
					<td><a href="{{.Link}}"><img src="{{.Image}}" alt="{{.Band}}"></a></td>
					<td>{{.Band}}<br>
						<strong>{{.Recordname}}</strong><br>
						<span class="emoji">💿</span> {{.Score}}/10
					</td>
					<td>
						<ul>
						{{range .Tracks}}
							<li>
							{{ if .Tracklink }}
								<span class="emoji">🎵</span> <a href="{{ .Tracklink}}">{{.Trackname}}</a> 
							{{ else }}
								<span class="emoji">🔍</span> {{.Trackname}} 
							{{end}}
							</li>
						{{end}}
						</ul>
					</td>
				</tr>
			{{end}}
		</tbody>
	</table>
{{end}}


{{define "Footer"}}
	<footer>
		<div class="container">
			<p>Coded with <span class="emoji">❤️</span> by <a href="https://github.com/jetzlstorfer">jetzlstorfer</a><br>Source on <a href="https://github.com/jetzlstorfer/plattentests-go">GitHub</a>. Content crawled from <a href="https://plattentests.de">Plattentests.de</a>.</p>
			<p>{{if .GitInfo}} 
					<a href="https://github.com/jetzlstorfer/plattentests-go/commit/{{.GitInfo}}"><img alt="GitHub last commit (branch)" src="https://img.shields.io/github/last-commit/jetzlstorfer/plattentests-go/main"></a> 
				{{else}} 
					<img alt="GitHub last commit (branch)" src="https://img.shields.io/github/last-commit/jetzlstorfer/plattentests-go/main">
	 			{{end}}
	 		</p>
		</div>
	</footer>
{{end}}

{{define "FormatTableScript" }}
<script>
// Get all the elements with data-imageurl (both cards and table rows)
const cards = document.querySelectorAll('.record-card[data-imageurl]');
const rows = document.querySelectorAll('tr[data-imageurl]');

// Apply styling to modern cards
cards.forEach(function(card) {
    var imageurl = card.getAttribute("data-imageurl");
    if (imageurl) {
        applyBackgroundColor(card, imageurl);
        applyTextColor(card, imageurl);
    }
});

// Apply styling to table rows (fallback)
rows.forEach(function(row) {
    var imageurl = row.getAttribute("data-imageurl");
    if (imageurl) {
        applyBackgroundColor(row, imageurl);
        applyTextColor(row, imageurl);
    }
});

// Header title scroll functionality
function handleHeaderTitle() {
    const headerTitle = document.getElementById('header-title');
    const heroSection = document.querySelector('.hero');
    
    if (!headerTitle || !heroSection) return;
    
    const observer = new IntersectionObserver(
        (entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    // Hero is visible, hide header title
                    headerTitle.classList.remove('visible');
                } else {
                    // Hero is not visible, show header title
                    headerTitle.classList.add('visible');
                }
            });
        },
        {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        }
    );
    
    observer.observe(heroSection);
}

// Add some modern interactions
document.addEventListener('DOMContentLoaded', function() {
    // Initialize header title scroll functionality
    handleHeaderTitle();
    
    // Smooth scroll for navigation links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            document.querySelector(this.getAttribute('href')).scrollIntoView({
                behavior: 'smooth'
            });
        });
    });
    
    // Add loading class removal after cards are loaded
    setTimeout(function() {
        document.querySelectorAll('.record-card').forEach(function(card) {
            card.classList.remove('loading');
        });
    }, 100);
});
</script>
{{end}}
